#%%
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Assuming df is your DataFrame with the data
# You may need to preprocess your data to select only numeric columns
# For demonstration purposes, let's assume you have selected relevant numeric columns
df = pd.read_csv(r"C:\Users\閻天立\Desktop\pybaseball\data2023.csv")

# Create a DataFrame with selected numeric columns
numeric_columns = ['hit_distance_sc', 'launch_speed',\
            'launch_angle', 'zone'
]
numeric_df = df[numeric_columns]

# calculate correlation matrix
correlation_matrix = numeric_df.corr()

# plot heatmap 
plt.figure(figsize=(10, 8))
heatmap = sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', fmt=".2f", linewidths=.5)

heatmap.set_xticklabels(heatmap.get_xticklabels(), rotation=45, ha='right')

plt.title('2023')
plt.show()
#%%
df23 = pd.read_csv(r"C:\Users\閻天立\Desktop\pybaseball\data2023.csv")
df22 = pd.read_csv(r"C:\Users\閻天立\Desktop\pybaseball\data2022.csv")

limited_index = 'estimated_woba_using_speedangle'


Q1 = df23[limited_index].quantile(0.25)
Q3 = df23[limited_index].quantile(0.75)
IQR = Q3-Q1
lower_bound = Q1 - 1.5 * IQR
upper_bound = Q3 + 1.5 * IQR

df23 = df23[(df23[limited_index] >= lower_bound)\
            & (df23[limited_index] <= upper_bound)]
df22 = df22[(df22[limited_index] >= lower_bound)\
            & (df22[limited_index] <= upper_bound)]

df = pd.DataFrame({'2022': df22[limited_index],\
            '2023': df23[limited_index]})

# Remove NaN values
df_cleaned = df.dropna()

# Melt the DataFrame to long format
df_melted = pd.melt(df_cleaned)

# Plot box plot
sns.boxplot(y='variable', x='value', data=df_melted)
plt.text(0.5, -0.15, limited_index, size=10, ha="center", transform=plt.gca().transAxes)

print(df22[limited_index].describe())
print(df23[limited_index].describe())
#%%


#%%